The render stack is an array of objects, each object is an entry to be rendered.
There are two types of entry: line and fill, shaped like so:

    stage : 5.2 -------------------------------------- entries are rendered in order of stage, lowest first
    translated : false || true ----------------------- if translated is true it draws exactly according to the path (text always needs pre-translation)
    size : 100 --------------------------------------- the number everything in path is multiplied by of translated is false
    path : [{x:0,y:0},{x:1,y:1},{x:1,y:0,jump:true}] - path is an array of points with an x and y, jump means to do moveTo instead of lineTo when moving to said point
    mode : fill || line || text ---------------------- whether to fill the shape or draw lines, or draw text
    color : [255,100,0,.5] --------------------------- the color in rgba format
    lineWidth : .25 ---------------------------------- the width of the line (if on line mode), will be multiplied by size if translated is false (only needed for line mode)
    x : 100 ------------------------------------------ where a point of 0,0 should be drawn, or the upper left corner of the shape, ignored if translated is true
    y : 100 ------------------------------------------ where a point of 0,0 should be drawn, or the upper left corner of the shape, ignored if translated is true
    font : Arial ------------------------------------- the font to use when rendering text (only needed for text)
    text : Hello. World! ----------------------------- the text to display if on text mode (only needed for text)

One thing to note is that when rendering text all that is needed is the stage, size, color, x, y, font, and text


let menu = {
  cutCorners: true,
  stage: 10,
  size: {
      x: 500,
      y: 500
  },
  location: {
      x: 100,
      y: 100
  },
  draggable: false,
  backgroundColor: [0,0,0,.75],
  border: {
      width: .015,
      color: [50,50,50,.75]
  },
  title: {
      text: "I'm a title!",
      color: [100,100,100],
      size: .25,
      font: "Arial"
  },
  padding: .05,
  buttons: [
      {
          border: {
              width: .1,
              color: [255,0,0,.2]
          },
          color: [0,0,255],
          title: {
              text: "I'm a title!",
              color: [0,0,0]
          },
          functions: {
              onHover: function(self) {},
              onClick: function(self) {}
          }
      },
  ],
  functions: {
      onRender: function(self) {
        self.buttons = []
        const count = Math.floor(Date.now()%10000/1000)+1
        //const count = 9
        for (let index = 0; index < count; index++) {
          self.buttons[index] = {
            border: {
                width: .015,
                color: [0,200,0]
            },
            color: [255 - index * (255 / count), 0, index * (255 / count)],
            title: {
                text: "I am box #"+(index+1),
                color: [0,0,0],
                font: "Arial"
            },
            functions: {
                onHover: function(self) {},
                onClick: function(self) {}
            }
          }
        }
      },
      onOpen: function(self) {},
      onClose: function(self) {},
      onResize: function(self) {}
  }
}
